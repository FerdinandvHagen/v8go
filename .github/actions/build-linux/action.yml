name: Build for Linux
description: 'Build V8 for Linux'

inputs:
  target-arch:
    description: 'Target Architecture'
    default: x64
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Restore CCache
      uses: actions/cache@v4
      with:
        path: .ccache
        key: ${{ runner.os }}-${{ runner.arch }}:libv8:ccache:${{ github.run_number }}
        restore-keys: |
          ${{ runner.os }}-${{ runner.arch }}:libv8:ccache:

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8' # https://chromium.googlesource.com/chromium/tools/depot_tools.git/+/refs/heads/main/README.md

    - name: Setup Build Tools
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -yq ccache
        sudo update-ccache-symlinks

        echo "/usr/lib/ccache" >> "$GITHUB_PATH"

        ccacheDir="${GITHUB_WORKSPACE}/.ccache"
        test -d "$ccacheDir" || mkdir "$ccacheDir"

        echo "CCACHE_DIR=$ccacheDir" >> "$GITHUB_ENV"

    - name: Download V8 Source
      shell: bash
      working-directory: ./deps
      run: ./v8_download.sh

    - name: Prepare for arm64 cross compile
      shell: bash
      if: ${{ inputs.target-arch == 'arm64' }}
      working-directory: ./deps/v8
      run: |
        sudo apt-get install -yq g++-aarch64-linux-gnu
        build/linux/sysroot_scripts/install-sysroot.py --arch=arm64

    - name: Compile V8
      shell: bash
      working-directory: ./deps
      run: ./v8_compile.sh ${{ inputs.target-arch }}

    - name: Show CCache Status
      shell: bash
      working-directory: ./deps
      run: ccache -s
